/*
 * Generated by the Jasper component of Apache Tomcat
 * Version: Apache Tomcat/9.0.85
 * Generated at: 2024-04-08 09:49:11 UTC
 * Note: The last modified time of this file was set to
 *       the last modified time of the source file after
 *       generation to assist with modification tracking.
 */
package org.apache.jsp.sampleDocumentosProxy;

import javax.servlet.*;
import javax.servlet.http.*;
import javax.servlet.jsp.*;

public final class Result_jsp extends org.apache.jasper.runtime.HttpJspBase
    implements org.apache.jasper.runtime.JspSourceDependent,
                 org.apache.jasper.runtime.JspSourceImports {

  private static final javax.servlet.jsp.JspFactory _jspxFactory =
          javax.servlet.jsp.JspFactory.getDefaultFactory();

  private static java.util.Map<java.lang.String,java.lang.Long> _jspx_dependants;

  private static final java.util.Set<java.lang.String> _jspx_imports_packages;

  private static final java.util.Set<java.lang.String> _jspx_imports_classes;

  static {
    _jspx_imports_packages = new java.util.HashSet<>();
    _jspx_imports_packages.add("javax.servlet");
    _jspx_imports_packages.add("javax.servlet.http");
    _jspx_imports_packages.add("javax.servlet.jsp");
    _jspx_imports_classes = null;
  }

  private volatile javax.el.ExpressionFactory _el_expressionfactory;
  private volatile org.apache.tomcat.InstanceManager _jsp_instancemanager;

  public java.util.Map<java.lang.String,java.lang.Long> getDependants() {
    return _jspx_dependants;
  }

  public java.util.Set<java.lang.String> getPackageImports() {
    return _jspx_imports_packages;
  }

  public java.util.Set<java.lang.String> getClassImports() {
    return _jspx_imports_classes;
  }

  public javax.el.ExpressionFactory _jsp_getExpressionFactory() {
    if (_el_expressionfactory == null) {
      synchronized (this) {
        if (_el_expressionfactory == null) {
          _el_expressionfactory = _jspxFactory.getJspApplicationContext(getServletConfig().getServletContext()).getExpressionFactory();
        }
      }
    }
    return _el_expressionfactory;
  }

  public org.apache.tomcat.InstanceManager _jsp_getInstanceManager() {
    if (_jsp_instancemanager == null) {
      synchronized (this) {
        if (_jsp_instancemanager == null) {
          _jsp_instancemanager = org.apache.jasper.runtime.InstanceManagerFactory.getInstanceManager(getServletConfig());
        }
      }
    }
    return _jsp_instancemanager;
  }

  public void _jspInit() {
  }

  public void _jspDestroy() {
  }

  public void _jspService(final javax.servlet.http.HttpServletRequest request, final javax.servlet.http.HttpServletResponse response)
      throws java.io.IOException, javax.servlet.ServletException {

    if (!javax.servlet.DispatcherType.ERROR.equals(request.getDispatcherType())) {
      final java.lang.String _jspx_method = request.getMethod();
      if ("OPTIONS".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        return;
      }
      if (!"GET".equals(_jspx_method) && !"POST".equals(_jspx_method) && !"HEAD".equals(_jspx_method)) {
        response.setHeader("Allow","GET, HEAD, POST, OPTIONS");
        response.sendError(HttpServletResponse.SC_METHOD_NOT_ALLOWED, "JSPs only permit GET, POST or HEAD. Jasper also permits OPTIONS");
        return;
      }
    }

    final javax.servlet.jsp.PageContext pageContext;
    javax.servlet.http.HttpSession session = null;
    final javax.servlet.ServletContext application;
    final javax.servlet.ServletConfig config;
    javax.servlet.jsp.JspWriter out = null;
    final java.lang.Object page = this;
    javax.servlet.jsp.JspWriter _jspx_out = null;
    javax.servlet.jsp.PageContext _jspx_page_context = null;


    try {
      response.setContentType("text/html;charset=UTF-8");
      pageContext = _jspxFactory.getPageContext(this, request, response,
      			null, true, 8192, true);
      _jspx_page_context = pageContext;
      application = pageContext.getServletContext();
      config = pageContext.getServletConfig();
      session = pageContext.getSession();
      out = pageContext.getOut();
      _jspx_out = out;

      out.write('\r');
      out.write('\n');
 request.setCharacterEncoding("UTF-8"); 
      out.write("\r\n");
      out.write("<HTML>\r\n");
      out.write("<HEAD>\r\n");
      out.write("<TITLE>Result</TITLE>\r\n");
      out.write("</HEAD>\r\n");
      out.write("<BODY>\r\n");
      out.write("<H1>Result</H1>\r\n");
      out.write("\r\n");
      com.jao.contentmanager.documentos.service.DocumentosProxy sampleDocumentosProxyid = null;
      synchronized (session) {
        sampleDocumentosProxyid = (com.jao.contentmanager.documentos.service.DocumentosProxy) _jspx_page_context.getAttribute("sampleDocumentosProxyid", javax.servlet.jsp.PageContext.SESSION_SCOPE);
        if (sampleDocumentosProxyid == null){
          sampleDocumentosProxyid = new com.jao.contentmanager.documentos.service.DocumentosProxy();
          _jspx_page_context.setAttribute("sampleDocumentosProxyid", sampleDocumentosProxyid, javax.servlet.jsp.PageContext.SESSION_SCOPE);
        }
      }
      out.write('\r');
      out.write('\n');

if (request.getParameter("endpoint") != null && request.getParameter("endpoint").length() > 0)
sampleDocumentosProxyid.setEndpoint(request.getParameter("endpoint"));

      out.write("\r\n");
      out.write("\r\n");

String method = request.getParameter("method");
int methodID = 0;
if (method == null) methodID = -1;

if(methodID != -1) methodID = Integer.parseInt(method);
boolean gotMethod = false;

try {
switch (methodID){ 
case 2:
        gotMethod = true;
        java.lang.String getEndpoint2mtemp = sampleDocumentosProxyid.getEndpoint();
if(getEndpoint2mtemp == null){

      out.write('\r');
      out.write('\n');
      out.print(getEndpoint2mtemp );
      out.write('\r');
      out.write('\n');

}else{
        String tempResultreturnp3 = org.eclipse.jst.ws.util.JspUtils.markup(String.valueOf(getEndpoint2mtemp));
        
      out.write("\r\n");
      out.write("        ");
      out.print( tempResultreturnp3 );
      out.write("\r\n");
      out.write("        ");

}
break;
case 5:
        gotMethod = true;
        String endpoint_0id=  request.getParameter("endpoint8");
            java.lang.String endpoint_0idTemp = null;
        if(!endpoint_0id.equals("")){
         endpoint_0idTemp  = endpoint_0id;
        }
        sampleDocumentosProxyid.setEndpoint(endpoint_0idTemp);
break;
case 10:
        gotMethod = true;
        com.jao.contentmanager.documentos.service.Documentos getDocumentos10mtemp = sampleDocumentosProxyid.getDocumentos();
if(getDocumentos10mtemp == null){

      out.write('\r');
      out.write('\n');
      out.print(getDocumentos10mtemp );
      out.write('\r');
      out.write('\n');

}else{
        if(getDocumentos10mtemp!= null){
        String tempreturnp11 = getDocumentos10mtemp.toString();
        
      out.write("\r\n");
      out.write("        ");
      out.print(tempreturnp11);
      out.write("\r\n");
      out.write("        ");

        }}
break;
case 13:
        gotMethod = true;
        String fecha_creacion_2id=  request.getParameter("fecha_creacion18");
            java.util.Calendar fecha_creacion_2idTemp = null;
        if(!fecha_creacion_2id.equals("")){
        java.text.DateFormat dateFormatfecha_creacion18 = java.text.DateFormat.getDateInstance();
        java.util.Date dateTempfecha_creacion18  = dateFormatfecha_creacion18.parse(fecha_creacion_2id);
         fecha_creacion_2idTemp = new java.util.GregorianCalendar();
        fecha_creacion_2idTemp.setTime(dateTempfecha_creacion18);
        }
        String tipo_3id=  request.getParameter("tipo20");
            java.lang.String tipo_3idTemp = null;
        if(!tipo_3id.equals("")){
         tipo_3idTemp  = tipo_3id;
        }
        String nombre_4id=  request.getParameter("nombre22");
            java.lang.String nombre_4idTemp = null;
        if(!nombre_4id.equals("")){
         nombre_4idTemp  = nombre_4id;
        }
        String id_5id=  request.getParameter("id24");
            java.lang.Long id_5idTemp = null;
        if(!id_5id.equals("")){
         id_5idTemp  = java.lang.Long.valueOf(id_5id);
        }
        String extension_6id=  request.getParameter("extension26");
            java.lang.String extension_6idTemp = null;
        if(!extension_6id.equals("")){
         extension_6idTemp  = extension_6id;
        }
        
      out.write("\r\n");
      out.write("        ");
      com.jao.contentmanager.documentos.model.DocumentoDTO com1jao1contentmanager1documentos1model1DocumentoDTO_1id = null;
      synchronized (session) {
        com1jao1contentmanager1documentos1model1DocumentoDTO_1id = (com.jao.contentmanager.documentos.model.DocumentoDTO) _jspx_page_context.getAttribute("com1jao1contentmanager1documentos1model1DocumentoDTO_1id", javax.servlet.jsp.PageContext.SESSION_SCOPE);
        if (com1jao1contentmanager1documentos1model1DocumentoDTO_1id == null){
          com1jao1contentmanager1documentos1model1DocumentoDTO_1id = new com.jao.contentmanager.documentos.model.DocumentoDTO();
          _jspx_page_context.setAttribute("com1jao1contentmanager1documentos1model1DocumentoDTO_1id", com1jao1contentmanager1documentos1model1DocumentoDTO_1id, javax.servlet.jsp.PageContext.SESSION_SCOPE);
        }
      }
      out.write("\r\n");
      out.write("        ");

        com1jao1contentmanager1documentos1model1DocumentoDTO_1id.setFecha_creacion(fecha_creacion_2idTemp);
        com1jao1contentmanager1documentos1model1DocumentoDTO_1id.setTipo(tipo_3idTemp);
        com1jao1contentmanager1documentos1model1DocumentoDTO_1id.setNombre(nombre_4idTemp);
        com1jao1contentmanager1documentos1model1DocumentoDTO_1id.setId(id_5idTemp);
        com1jao1contentmanager1documentos1model1DocumentoDTO_1id.setExtension(extension_6idTemp);
        java.lang.String uploadFile13mtemp = sampleDocumentosProxyid.uploadFile(com1jao1contentmanager1documentos1model1DocumentoDTO_1id);
if(uploadFile13mtemp == null){

      out.write('\r');
      out.write('\n');
      out.print(uploadFile13mtemp );
      out.write('\r');
      out.write('\n');

}else{
        String tempResultreturnp14 = org.eclipse.jst.ws.util.JspUtils.markup(String.valueOf(uploadFile13mtemp));
        
      out.write("\r\n");
      out.write("        ");
      out.print( tempResultreturnp14 );
      out.write("\r\n");
      out.write("        ");

}
break;
}
} catch (Exception e) { 

      out.write("\r\n");
      out.write("Exception: ");
      out.print( org.eclipse.jst.ws.util.JspUtils.markup(e.toString()) );
      out.write("\r\n");
      out.write("Message: ");
      out.print( org.eclipse.jst.ws.util.JspUtils.markup(e.getMessage()) );
      out.write('\r');
      out.write('\n');

return;
}
if(!gotMethod){

      out.write("\r\n");
      out.write("result: N/A\r\n");

}

      out.write("\r\n");
      out.write("</BODY>\r\n");
      out.write("</HTML>");
    } catch (java.lang.Throwable t) {
      if (!(t instanceof javax.servlet.jsp.SkipPageException)){
        out = _jspx_out;
        if (out != null && out.getBufferSize() != 0)
          try {
            if (response.isCommitted()) {
              out.flush();
            } else {
              out.clearBuffer();
            }
          } catch (java.io.IOException e) {}
        if (_jspx_page_context != null) _jspx_page_context.handlePageException(t);
        else throw new ServletException(t);
      }
    } finally {
      _jspxFactory.releasePageContext(_jspx_page_context);
    }
  }
}
